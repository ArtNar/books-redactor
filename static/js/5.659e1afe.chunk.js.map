{"version":3,"sources":["components/LoadingState/LoadingState.module.css","components/List/List.module.css","components/Paper/Paper.module.css","components/ListItem/ListItem.module.css","components/ListItemCell/ListItemCell.module.css","components/Select/Select.module.css","components/Orderings/Orderings.module.css","components/LoadingState/LoadingState.jsx","components/List/List.jsx","components/Paper/Paper.jsx","components/ListItem/ListItem.jsx","components/ListItemCell/ListItemCell.jsx","components/BookList/columns.js","components/BookList/BookList.jsx","components/Select/Select.jsx","components/Orderings/Orderings.jsx","utils/constants/ordering.js","containers/BooksPage/BooksPage.jsx","utils/hooks/useOrdering.js","components/Button/Button.jsx","components/ActionsPanel/ActionsPanel.jsx","components/Button/Button.module.css","components/ActionsPanel/ActionsPanel.module.css","utils/hooks/useQueryStorage.js","utils/hooks/useMutationStorage.js","utils/constants/storage.js"],"names":["module","exports","cn","_cn","styles","LoadingState","children","error","loading","className","Preloader","List","title","rest","cx","Paper","elevation","padded","color","ListItem","ListItemCell","label","key","render","image","src","height","alt","bookName","authors","Array","isArray","map","surname","name","join","amountOfPages","publishingHouseName","publishYear","releaseDate","isbn","BookList","list","emptyMessage","onEdit","onDelete","handleEdit","id","handleDelete","columnsWithControls","columns","ActionsPanel","actions","onClick","length","item","Select","onChange","value","options","event","newValue","target","optionValue","optionLabel","Orderings","order","setOrder","resetOrder","Button","BOOKS_SORT_OPTIONS","BooksPage","history","useHistory","useQueryStorage","BOOKS_STORAGE_PATH","data","books","refetch","useMutationStorage","saveData","location","useLocation","useState","undefined","orderData","setOrderData","makeUrl","newOrder","stringify","useEffect","query","parse","search","ignoreQueryPrefix","push","useOrdering","handleClickDeleteBook","bookId","a","window","confirm","filter","console","sortedBooks","useMemo","sort","b","onCreate","disabled","type","inProgress","itemKey","setData","errors","setErrors","setLoading","getStorageData","useCallback","localStorage","getItem","fetchData","then","result","JSON","catch","finally","Error","setItem"],"mappings":"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","file":"static/js/5.659e1afe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoadingState_loader__1ZbJg\",\"loader__fallback\":\"LoadingState_loader__fallback__DtQyG\",\"loader__error\":\"LoadingState_loader__error__1mVZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3ccy6\",\"list__title\":\"List_list__title__3H4UW\",\"list__content\":\"List_list__content__QIRxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Paper_paper__eCA8o\",\"paper_elevation_1\":\"Paper_paper_elevation_1__5De17\",\"paper_color_white\":\"Paper_paper_color_white__190JZ\",\"paper_padded\":\"Paper_paper_padded__1c4Gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"ListItem_list-item__2CGcQ\",\"list-item__inner\":\"ListItem_list-item__inner__4inSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-cell\":\"ListItemCell_list-cell__IrV7j\",\"list-cell__label\":\"ListItemCell_list-cell__label__2y50B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3UVD7\",\"select__inner\":\"Select_select__inner__1xIZH\",\"select__label\":\"Select_select__label__2nvTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderings\":\"Orderings_orderings__1ZSrP\",\"orderings__button\":\"Orderings_orderings__button__KNcF2\"};","import React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Preloader }    from 'components/Preloader'\nimport _cn              from 'utils/cn'\nimport styles           from './LoadingState.module.css'\n\nconst cn = _cn('loader', styles)\n\nconst LoadingState = ({\n    children,\n    error,\n    loading,\n}) => (\n    <div className={cn()}>\n        { (error && (\n            <div className={cn('error')}>\n                Ошибка загрузки:\n                <br />\n                {error}\n            </div>\n        ))\n    || (loading && (\n        <div className={cn('fallback')}>\n            <Preloader />\n        </div>\n    ))\n    || children}\n    </div>\n)\n\nLoadingState.propTypes = {\n    children: PropTypes.node,\n    error: PropTypes.string,\n    loading: PropTypes.bool,\n}\n\nexport default LoadingState\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport cx           from 'classnames'\nimport _cn          from 'utils/cn'\nimport styles       from './List.module.css'\n\nconst cn = _cn('list', styles)\n\nconst List = ({\n    children,\n    className,\n    title,\n    ...rest\n}) => (\n    <div\n        {...rest}\n        className={cx(cn(), className)}\n    >\n        {title && (\n            <div className={cn('title')}>\n                {title}\n            </div>\n        )}\n        <ul className={cn('content')}>\n            {children}\n        </ul>\n    </div>\n)\n\nList.propTypes = {\n    children: PropTypes.node,\n    component: PropTypes.elementType,\n    title: PropTypes.node,\n    className: PropTypes.string,\n}\n\nexport default List\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport cx           from 'classnames'\nimport _cn          from 'utils/cn'\nimport styles       from './Paper.module.css'\n\nconst cn = _cn('paper', styles)\n\nconst Paper = ({\n    className,\n    elevation = 0,\n    padded,\n    color,\n    ...rest\n}) => (\n    <div\n        {...rest}\n        className={cx(cn({\n            elevation,\n            padded,\n            color,\n        }), className)}\n    />\n)\n\nPaper.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    elevation: PropTypes.number,\n    padded: PropTypes.bool,\n    color: PropTypes.string,\n}\n\nexport default Paper\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport _cn          from 'utils/cn'\nimport { Paper }    from 'components/Paper'\nimport styles       from './ListItem.module.css'\n\nconst cn = _cn('list-item', styles)\n\nconst ListItem = ({\n    children,\n    className,\n    ...rest\n}) => (\n    <Paper\n        className={cn()}\n        elevation={1}\n        color=\"white\"\n        padded\n    >\n        <li\n            {...rest}\n            className={cn('inner')}\n        >\n            {children}\n        </li>\n    </Paper>\n\n)\n\nListItem.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n}\n\nexport default ListItem\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport _cn          from 'utils/cn'\nimport styles       from './ListItemCell.module.css'\n\nconst cn = _cn('list-cell', styles)\n\nconst ListItemCell = ({\n    children,\n    label,\n}) => (\n    <div className={cn()}>\n        {label && (\n            <span className={cn('label')}>\n                {`${label}: `}\n            </span>\n        )}\n        <span className={cn('value')}>\n            {children}\n        </span>\n    </div>\n)\n\nListItemCell.propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string,\n}\n\nexport default ListItemCell\n","import React from 'react'\n\nexport default [\n    {\n        key: 'image',\n        render: ({ image }) => (\n            image\n                ? <img src={image} height=\"100\" alt=\"\" />\n                : null\n        ),\n    },\n    {\n        key: 'bookName',\n        label: 'Название',\n        render: ({ bookName }) => (bookName),\n    },\n    {\n        key: 'authors',\n        label: 'Авторы',\n        render: ({ authors }) => (Array.isArray(authors)\n            ? authors.map(({ surname, name }) => `${surname} ${name}`).join(', ')\n            : null)\n        ,\n    },\n    {\n        key: 'amountOfPages',\n        label: 'Количество страниц',\n        render: ({ amountOfPages }) => (amountOfPages),\n    },\n    {\n        key: 'publishingHouseName',\n        label: 'Название издательства',\n        render: ({ publishingHouseName }) => (publishingHouseName),\n    },\n    {\n        key: 'publishYear',\n        label: 'Год публикации',\n        render: ({ publishYear }) => (publishYear),\n    },\n    {\n        key: 'releaseDate',\n        label: 'Дата выхода в тираж',\n        render: ({ releaseDate }) => (releaseDate),\n    },\n    {\n        key: 'isbn',\n        label: 'ISBN',\n        render: ({ isbn }) => (isbn),\n    },\n]\n","import React                from 'react'\nimport PropTypes            from 'prop-types'\nimport { ActionsPanel }     from 'components/ActionsPanel'\nimport { LoadingState }     from 'components/LoadingState'\nimport { List }             from 'components/List'\nimport { ListItem }         from 'components/ListItem'\nimport { ListItemCell }     from 'components/ListItemCell'\nimport columns              from './columns'\n\nconst getActions = ({ onEdit, onDelete }) => [\n    {\n        key: 'edit',\n        label: 'Изменить',\n        onClick: onEdit,\n    },\n    {\n        key: 'delete',\n        label: 'Удалить',\n        onClick: onDelete,\n    },\n]\n\nconst BookList = ({\n    list = [],\n    loading,\n    emptyMessage = 'Список пуст...',\n    onEdit,\n    onDelete,\n}) => {\n    const handleEdit = (id) => () => onEdit && onEdit(id)\n\n    const handleDelete = (id) => () => onDelete && onDelete(id)\n\n    const columnsWithControls = [\n        ...columns,\n        {\n            key: 'edit',\n            render: ({ id }) => (\n                <ActionsPanel\n                    actions={getActions({\n                        onEdit: handleEdit(id),\n                        onDelete: handleDelete(id),\n                    })}\n                />\n            ),\n        },\n    ]\n\n    return (\n        <LoadingState loading={loading}>\n            {list.length\n                ? (\n                    <List>\n                        {list.map((item) => (\n                            <ListItem\n                                key={item.id}\n                            >\n                                {columnsWithControls.map(({ key, render, label }) => (\n                                    <ListItemCell\n                                        key={key}\n                                        label={label}\n                                    >\n                                        {render(item)}\n                                    </ListItemCell>\n                                ))}\n                            </ListItem>\n                        ))}\n                    </List>\n                )\n                : emptyMessage}\n        </LoadingState>\n    )\n}\n\nBookList.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n    loading: PropTypes.bool,\n    emptyMessage: PropTypes.string,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n}\n\nexport default BookList\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport styles           from './Select.module.css'\n\nconst cn = _cn('select', styles)\n\nconst Select = ({\n    className,\n    name,\n    label,\n    onChange,\n    value = '',\n    options = [],\n}) => {\n    const handleChange = (event) => {\n        const newValue = event.target.value\n\n        if (onChange) {\n            onChange(newValue)\n        }\n    }\n\n    return (\n        <div className={cx(cn(), className)}>\n            {label && (\n                <span className={cn('label')}>\n                    {label}\n                </span>\n            )}\n            <select\n                className={cn('inner')}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                {options.map(({\n                    value: optionValue,\n                    label: optionLabel,\n                }) => (\n                    <option\n                        key={optionValue}\n                        value={optionValue}\n                    >\n                        {optionLabel}\n                    </option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nSelect.propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    options: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n}\n\nexport default Select\n","import React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Select }       from 'components/Select'\nimport { Button }       from 'components/Button'\nimport _cn              from 'utils/cn'\nimport styles           from './Orderings.module.css'\n\nconst cn = _cn('orderings', styles)\n\nconst Orderings = ({\n    options = [],\n    order,\n    setOrder,\n    resetOrder,\n    label = 'Сортировать по ',\n}) => {\n    const handleChange = (value) => {\n        if (setOrder) {\n            setOrder({\n                order: value,\n            })\n        }\n    }\n\n    return (\n        <div className={cn()}>\n            <Select\n                onChange={handleChange}\n                options={options}\n                label={label}\n                value={order}\n            />\n            {resetOrder && (\n                <Button\n                    className={cn('button')}\n                    onClick={resetOrder}\n                >\n                    Сбросить\n                </Button>\n            )}\n        </div>\n    )\n}\n\nOrderings.propTypes = {\n    options: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n    order: PropTypes.string,\n    setOrder: PropTypes.func,\n    resetOrder: PropTypes.func,\n    label: PropTypes.string,\n}\n\nexport default Orderings\n","export const BOOKS_SORT_OPTIONS = [\n    {\n        label: '-',\n        value: '',\n    },\n    {\n        label: 'Название',\n        value: 'bookName',\n    },\n    {\n        label: 'Год публикации',\n        value: 'publishYear',\n    },\n]\n","import React, { useMemo }       from 'react'\nimport { useHistory }           from 'react-router-dom'\nimport { BookList }             from 'components/BookList'\nimport { ActionsPanel }         from 'components/ActionsPanel'\nimport { Orderings }            from 'components/Orderings'\nimport { useQueryStorage }      from 'utils/hooks/useQueryStorage'\nimport { useMutationStorage }   from 'utils/hooks/useMutationStorage'\nimport { useOrdering }          from 'utils/hooks/useOrdering'\nimport { BOOKS_STORAGE_PATH }   from 'utils/constants/storage'\nimport { BOOKS_SORT_OPTIONS }   from 'utils/constants/ordering'\n\nconst getActions = ({ onCreate }) => [\n    {\n        key: 'add',\n        label: 'Добавить новую',\n        onClick: onCreate,\n    },\n]\n\nconst BooksPage = () => {\n    const history = useHistory()\n    const { data: books = [], loading, refetch } = useQueryStorage(BOOKS_STORAGE_PATH)\n    const [saveData] = useMutationStorage(BOOKS_STORAGE_PATH)\n    const { order, setOrder, resetOrder } = useOrdering()\n\n    const handleClickCreateBook = () => history.push('/create')\n\n    const handleCLickEditBook = (id) => history.push(`/edit/${id}`)\n\n    const handleClickDeleteBook = async (bookId) => {\n        // TODO: Добавить работу с модальными окнами\n        // eslint-disable-next-line no-alert\n        const shouldDelete = window.confirm('Удалить книгу?')\n        if (shouldDelete) {\n            try {\n                await saveData(books.filter(({ id }) => bookId !== id))\n                refetch()\n            } catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    const sortedBooks = useMemo(() => {\n        if (!order) {\n            return books\n        }\n\n        // в каком порядке выводить если значнеие не заполнено?\n        // например год публикации не обязательный параметр\n        return books.sort((a, b) => (a[order] > b[order] ? 1 : -1))\n    }, [books, order])\n\n    return (\n        <>\n            <ActionsPanel\n                actions={getActions({\n                    onCreate: handleClickCreateBook,\n                })}\n            />\n            <Orderings\n                options={BOOKS_SORT_OPTIONS}\n                order={order}\n                setOrder={setOrder}\n                resetOrder={resetOrder}\n            />\n            <BookList\n                loading={loading}\n                list={sortedBooks}\n                onEdit={handleCLickEditBook}\n                onDelete={handleClickDeleteBook}\n            />\n        </>\n    )\n}\n\nexport default BooksPage\n","import { useState, useEffect } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { parse, stringify } from 'qs'\n\n// TODO: можно улучшить и сохранять для пользователя его вариант сортировки\nexport const useOrdering = () => {\n    const location = useLocation()\n    const history = useHistory()\n    const [orderData, setOrderData] = useState(undefined)\n\n    const makeUrl = (newOrder) => `?${stringify(newOrder)}`\n\n    const setOrder = (newOrder) => {\n        history.push(makeUrl(newOrder))\n    }\n\n    const resetOrder = () => {\n        history.push(makeUrl({}))\n    }\n\n    useEffect(() => {\n        const query = parse(location.search, { ignoreQueryPrefix: true })\n\n        setOrderData(query.order)\n    }, [location])\n\n    return {\n        order: orderData,\n        setOrder,\n        resetOrder,\n    }\n}\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Preloader }    from 'components/Preloader'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport styles           from './Button.module.css'\n\nconst cn = _cn('button', styles)\n\nconst Button = ({\n    name,\n    className,\n    disabled,\n    children,\n    type = 'button',\n    inProgress,\n    onClick,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        type={type}\n        className={cx(cn({\n            disabled,\n        }), className)}\n        name={name}\n        disabled={disabled}\n        onClick={onClick}\n    >\n        <div\n            key=\"content\"\n            className={cn('content')}\n        >\n            {inProgress\n                ? <Preloader className={cn('spin')} />\n                : (\n                    <span\n                        key=\"text\"\n                        className={cn('item')}\n                    >\n                        {children}\n                    </span>\n                )}\n        </div>\n    </button>\n)\n\nButton.propTypes = {\n    disabled: PropTypes.bool,\n    inProgress: PropTypes.bool,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport { Button }   from 'components/Button'\nimport _cn          from 'utils/cn'\nimport styles       from './ActionsPanel.module.css'\n\nconst cn = _cn('actions-panel', styles)\n\nconst ActionsPanel = ({\n    actions = [],\n}) => (\n    <div className={cn()}>\n        {actions.map(({\n            key,\n            label,\n            onClick,\n            ...rest\n        }) => (\n            <Button\n                {...rest}\n                className={cn('button')}\n                key={key}\n                onClick={onClick}\n            >\n                {label}\n            </Button>\n        ))}\n    </div>\n)\n\nActionsPanel.propTypes = {\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n}\n\nexport default ActionsPanel\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\",\"button__content\":\"Button_button__content__2_NlO\",\"button_disabled\":\"Button_button_disabled__Fzsch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions-panel\":\"ActionsPanel_actions-panel__1JMSO\",\"actions-panel__button\":\"ActionsPanel_actions-panel__button__2mAKk\"};","import { useState, useEffect, useCallback } from 'react'\n\nexport const useQueryStorage = (itemKey) => {\n    const [data, setData] = useState(undefined)\n    const [errors, setErrors] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const getStorageData = useCallback(async () => localStorage.getItem(itemKey), [itemKey])\n\n    const fetchData = useCallback(() => {\n        getStorageData()\n            .then((result) => {\n                if (result) {\n                    setData(JSON.parse(result))\n                }\n            })\n            .catch((error) => setErrors(error))\n            .finally(() => setLoading(false))\n    }, [getStorageData])\n\n    useEffect(() => {\n        if (!itemKey) {\n            throw new Error('You should provide path to data at localStorage')\n        }\n\n        fetchData()\n    }, [itemKey, fetchData])\n\n    return {\n        data,\n        loading,\n        errors,\n        refetch: fetchData,\n    }\n}\n","export const useMutationStorage = (itemKey) => {\n    const setStorageData = async (value) => {\n        try {\n            localStorage.setItem(itemKey, JSON.stringify(value))\n        } catch (error) {\n            throw new Error('Недостаточно места в Local Storage')\n        }\n    }\n\n    return [setStorageData]\n}\n","export const BOOKS_STORAGE_PATH = 'books'\n"],"sourceRoot":""}