{"version":3,"sources":["components/forms/Form/Form.module.css","components/Input/Input.module.css","components/forms/Form/Form.jsx","components/Input/Input.jsx","components/forms/BaseField/BaseField.jsx","components/forms/TextField/TextField.jsx","components/forms/DateField/DateField.jsx","containers/BookForm/BookFormView.jsx","utils/validation/messages.js","utils/validation/string.js","containers/BookForm/fields.js","utils/validation/password.js","utils/validation/number.js","containers/BookForm/BookForm.jsx","utils/hoc/withFormik.jsx","utils/helpers/getValidationSchemaFromFields.js","containers/BookPage/BookPage.jsx","utils/hooks/useMutationStorage.js","utils/helpers/getInitialValuesFromFields.js","components/Button/Button.jsx","components/Button/Button.module.css","components/ActionsPanel/ActionsPanel.module.css","utils/hooks/useQueryStorage.js","utils/constants/storage.js","components/ActionsPanel/ActionsPanel.jsx"],"names":["module","exports","cn","_cn","styles","Form","children","onSubmit","className","Input","name","disabled","type","placeholder","required","error","onBlur","label","onChange","onClick","onKeyDown","onKeyUp","onFocus","value","rest","cx","event","args","BaseField","Component","component","values","touched","errors","get","TextField","props","DateField","BookFormView","disabledProp","isSubmitting","handleChange","handleBlur","handleSubmit","fieldProps","Button","inProgress","messages","number","declOfNum","titles","stringRequired","Yup","typeError","min","max","integer","defaultValue","validationRule","BookForm","validationSchema","displayName","formik","mapPropsToValues","initialValues","enableReinitialize","formData","a","setSubmitting","setErrors","onError","onFinish","withFormik","getValidationSchemaFromFields","fields","result","Object","keys","forEach","key","field","Error","shape","BookPage","itemKey","history","useHistory","useQueryStorage","BOOKS_STORAGE_PATH","data","loading","localStorage","setItem","saveData","useMemo","getInitialValuesFromFields","obj","_obj","ActionsPanel","actions","onCancel","push","console","log","Preloader","useState","undefined","setData","setLoading","getStorageData","getItem","useEffect","then","catch","finally","map"],"mappings":"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","file":"static/js/5.184ea45b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__FrcMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\",\"input__inner\":\"Input_input__inner__1EWoq\",\"input__wrapper\":\"Input_input__wrapper__1ZSiw\",\"input__error\":\"Input_input__error__1b2o_\"};","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport _cn          from 'utils/cn'\nimport styles       from './Form.module.css'\n\nconst cn = _cn('form', styles)\n\nconst Form = ({\n    children,\n    onSubmit,\n}) => (\n    <form\n        className={cn()}\n        onSubmit={onSubmit}\n    >\n        {children}\n    </form>\n)\n\nForm.propTypes = {\n    children: PropTypes.node.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Form\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport styles           from './Input.module.css'\n\nconst cn = _cn('input', styles)\n\nconst Input = ({\n    name,\n    className,\n    disabled,\n    type = 'text',\n    placeholder,\n    required,\n    error,\n    label,\n    onBlur,\n    onChange,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    value = '',\n    ...rest\n}) => {\n    const handleFocus = (event) => {\n        if (onFocus) {\n            onFocus(event)\n        }\n    }\n\n    const handleBlur = (event) => {\n        if (onBlur) {\n            onBlur(event)\n        }\n    }\n\n    const handleChange = (event, ...args) => {\n        if (onChange) {\n            onChange(event, ...args)\n        }\n    }\n\n    const handleClick = (event) => {\n        if (onClick) {\n            onClick(event)\n        }\n    }\n\n    return (\n        <div className={cx(cn('wrapper', className))}>\n            <div className={cn()}>\n                <input\n                    {...rest}\n                    className={cn('inner')}\n                    name={name}\n                    type={type}\n                    value={value}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    required={required}\n                    onKeyDown={onKeyDown}\n                    onKeyUp={onKeyUp}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onClick={handleClick}\n                />\n            </div>\n            {error && (\n                <span className={cn('error')}>\n                    {error}\n                </span>\n            )}\n        </div>\n    )\n}\n\nInput.propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    placeholder: PropTypes.string,\n    readOnly: PropTypes.bool,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]),\n}\n\nexport default Input\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport get          from 'just-safe-get'\n\nconst BaseField = ({\n    component: Component,\n    name,\n    values = {},\n    touched = {},\n    errors = {},\n    ...rest\n}) => (\n    <Component\n        {...rest}\n        name={name}\n        value={get(values, name)}\n        error={get(touched, name) && get(errors, name)}\n    />\n)\n\nBaseField.propTypes = {\n    component: PropTypes.func,\n    data: PropTypes.shape({}),\n    errors: PropTypes.shape({}),\n    name: PropTypes.string,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default BaseField\n","import React            from 'react'\n\nimport { Input }        from 'components/Input'\nimport { BaseField }    from 'components/forms/BaseField'\n\nconst TextField = (props) => (\n    <BaseField\n        {...props}\n        component={Input}\n    />\n)\n\nexport default TextField\n","import React            from 'react'\n\nimport { Input }        from 'components/Input'\nimport { BaseField }    from 'components/forms/BaseField'\n\nconst DateField = (props) => (\n    <BaseField\n        {...props}\n        component={Input}\n        type=\"datetime-local\"\n    />\n)\n\nexport default DateField\n","import React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Button }       from 'components/Button'\nimport { Form }         from 'components/forms/Form'\nimport { TextField }    from 'components/forms/TextField'\nimport { DateField }    from 'components/forms/DateField'\n\nconst BookFormView = ({\n    values,\n    errors,\n    touched,\n    disabled: disabledProp,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n}) => {\n    const fieldProps = {\n        values,\n        touched,\n        errors,\n        disabled: disabledProp || isSubmitting,\n        onBlur: handleBlur,\n        onChange: handleChange,\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <TextField\n                {...fieldProps}\n                label=\"Название\"\n                placeholder=\"Введите данные\"\n                name=\"name\"\n            />\n            <DateField\n                {...fieldProps}\n                label=\"Дата выхода в тираж\"\n                placeholder=\"Введите данные\"\n                name=\"printDate\"\n            />\n            <Button\n                type=\"submit\"\n                disabled={disabledProp}\n                inProgress={isSubmitting}\n            >\n                Сохранить\n            </Button>\n        </Form>\n    )\n}\n\nBookFormView.propTypes = {\n    data: PropTypes.shape({}),\n    errors: PropTypes.shape({}),\n    handleBlur: PropTypes.func,\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n    disabled: PropTypes.bool,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default BookFormView\n","/* eslint-disable no-use-before-define */\nexport const messages = {\n    required: 'Заполните поле',\n    isNumber: 'Значение должно быть числом',\n    isBoolean: 'Значение должно быть Истина/Ложь',\n    isInteger: 'Значение должно быть целым числом',\n    isString: 'Значение должно быть строкой',\n    emailInvalid: 'Некорректный адрес электронной почты',\n    phoneNumberInvalid: 'Некорректный номер',\n    rangeValueInPast: 'Укажите дату не меньше текущей',\n    rangeValueInvalid: 'Укажите дату окончания больше даты начала',\n    tooShort: (number = 0) => `Поле должно быть минимум ${number} ${declOfNum(number, ['символ', 'символа', 'символов'])}`,\n    tooLong: (number = 0) => `Поле должно быть максимум ${number} ${declOfNum(number, ['символ', 'символа', 'символов'])}`,\n}\n\nfunction declOfNum(number, titles) {\n    const cases = [2, 0, 1, 1, 1, 2]\n\n    return titles[(number % 100 > 4 && number % 100 < 20)\n        ? 2\n        : cases[(number % 10 < 5) ? number % 10 : 5]]\n}\n","import * as Yup from 'yup'\nimport { messages } from './messages'\n\nexport const stringNotRequired = Yup\n    .string()\n    .typeError(messages.isString)\n\nexport const stringRequired = stringNotRequired\n    .required(messages.required)\n","import {\n    stringRequired,\n} from 'utils/validation'\n\nexport default {\n    name: {\n        name: 'name',\n        defaultValue: '',\n        validationRule: stringRequired,\n    },\n}\n","import { messages } from './messages'\nimport { stringRequired } from './string'\n\nexport const password = stringRequired\n    .min(3, messages.tooShort(3))\n    .max(255, messages.tooLong(255))\n","import * as Yup from 'yup'\nimport { messages } from './messages'\n\nexport const number = Yup\n    .number()\n    .typeError(messages.isNumber)\n\nexport const integer = number\n    .integer(messages.isInteger)\n","import { withFormik }                       from 'utils/hoc/withFormik'\nimport { getValidationSchemaFromFields }    from 'utils/helpers/getValidationSchemaFromFields'\nimport BookFormView                         from './BookFormView'\nimport fields                                from './fields'\n\nconst BookForm = withFormik({\n    validationSchema: getValidationSchemaFromFields(fields),\n    displayName: 'BookForm',\n})(BookFormView)\n\nexport default BookForm\n","import { withFormik as formik } from 'formik'\n\nexport const withFormik = ({\n    validationSchema,\n    displayName,\n    ...rest\n}) => (Component) => formik({\n    mapPropsToValues: ({ initialValues }) => initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    handleSubmit: async (formData, { setSubmitting, setErrors, props }) => {\n        const { onSubmit, onError, onFinish } = props\n\n        try {\n            const errors = await onSubmit(formData)\n\n            if (errors) {\n                setErrors(errors)\n            } else {\n                onFinish()\n            }\n        } catch (error) {\n            onError('Ошибка сохранения', error)\n        } finally {\n            setSubmitting(false)\n        }\n    },\n    displayName,\n    ...rest,\n})(Component)\n","import * as Yup from 'yup'\n\nexport const getValidationSchemaFromFields = (fields) => {\n    const result = {}\n\n    Object.keys(fields).forEach((key) => {\n        const field = fields[key]\n\n        if (typeof field !== 'object') {\n            throw new Error(`Wrong type of field \"${key}\" passed to validation schema. Expected \"object\" type`)\n        }\n\n        if ('validationRule' in field) {\n            result[key] = field.validationRule\n        } else {\n            result[key] = getValidationSchemaFromFields(field)\n        }\n    })\n\n    return Yup.object().shape({ ...result })\n}\n","import React, { useMemo }               from 'react'\nimport { useHistory }                   from 'react-router-dom'\nimport { getInitialValuesFromFields }   from 'utils/helpers/getInitialValuesFromFields'\nimport { BookForm, fields }              from 'containers/BookForm'\nimport { ActionsPanel }                 from 'components/ActionsPanel'\nimport { useQueryStorage }              from 'utils/hooks/useQueryStorage'\nimport { useMutationStorage }           from 'utils/hooks/useMutationStorage'\nimport { BOOKS_STORAGE_PATH }           from 'utils/constants/storage'\n\nconst getActions = ({ onCancel }) => [\n    {\n        key: ' cancel',\n        label: 'Назад',\n        onClick: onCancel,\n    },\n]\n\nconst BookPage = () => {\n    const history = useHistory()\n    const { data = [], loading } = useQueryStorage(BOOKS_STORAGE_PATH)\n    const [saveData] = useMutationStorage(BOOKS_STORAGE_PATH)\n\n    const handleClickCancel = () => history.push('/')\n\n    const handleSubmit = async (values) => {\n        try {\n            await saveData([])\n        } catch (error) {\n        }\n    }\n\n    const handleError = () => {\n        console.log('error')\n    }\n\n    const initialValues = useMemo(() => ({\n        ...getInitialValuesFromFields(fields),\n    }), [])\n\n    return (\n        <>\n            <ActionsPanel\n                actions={getActions({\n                    onCancel: handleClickCancel,\n                })}\n            />\n            <BookForm\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                onError={handleError}\n            />\n        </>\n    )\n}\n\nexport default BookPage\n","export const useMutationStorage = (itemKey) => {\n    const setStorageData = async (value) => localStorage.setItem(itemKey, value)\n\n    return [setStorageData]\n}\n","/* eslint-disable no-underscore-dangle */\nexport const getInitialValuesFromFields = (obj) => {\n    const result = {}\n\n    Object.keys(obj).forEach((key) => {\n        if (typeof obj[key] === 'object') {\n            if ('defaultValue' in obj[key]) {\n                result[key] = obj[key].defaultValue\n            } else {\n                const _obj = getInitialValuesFromFields(obj[key])\n\n                result[key] = _obj\n            }\n        } else {\n            result[key] = ''\n        }\n    })\n\n    return result\n}\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Preloader }    from 'components/Preloader'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport styles           from './Button.module.css'\n\nconst cn = _cn('button', styles)\n\nconst Button = ({\n    name,\n    className,\n    disabled,\n    children,\n    type = 'button',\n    inProgress,\n    onClick,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        type={type}\n        className={cx(cn({\n            disabled,\n        }), className)}\n        name={name}\n        disabled={disabled}\n        onClick={onClick}\n    >\n        <div\n            key=\"content\"\n            className={cn('content')}\n        >\n            {inProgress\n                ? <Preloader className={cn('spin')} />\n                : (\n                    <span\n                        key=\"text\"\n                        className={cn('item')}\n                    >\n                        {children}\n                    </span>\n                )}\n        </div>\n    </button>\n)\n\nButton.propTypes = {\n    disabled: PropTypes.bool,\n    inProgress: PropTypes.bool,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\",\"button__content\":\"Button_button__content__2_NlO\",\"button_disabled\":\"Button_button_disabled__Fzsch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions-panel\":\"ActionsPanel_actions-panel__1JMSO\"};","import { useState, useEffect } from 'react'\n\nexport const useQueryStorage = (itemKey) => {\n    const [data, setData] = useState(undefined)\n    const [errors, setErrors] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const getStorageData = async () => localStorage.getItem(itemKey)\n\n    useEffect(() => {\n        if (!itemKey) {\n            return\n        }\n\n        getStorageData()\n            .then((result) => {\n                if (result) {\n                    setData(result)\n                }\n            })\n            .catch((error) => setErrors(error))\n            .finally(() => setLoading(false))\n    }, [itemKey])\n\n    return {\n        data,\n        loading,\n        errors,\n    }\n}\n","export const BOOKS_STORAGE_PATH = 'books'\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport { Button }   from 'components/Button'\nimport _cn          from 'utils/cn'\nimport styles       from './ActionsPanel.module.css'\n\nconst cn = _cn('actions-panel', styles)\n\nconst ActionsPanel = ({\n    actions = [],\n}) => (\n    <div className={cn()}>\n        {actions.map(({\n            key,\n            label,\n            onClick,\n            ...rest\n        }) => (\n            <Button\n                {...rest}\n                key={key}\n                onClick={onClick}\n            >\n                {label}\n            </Button>\n        ))}\n    </div>\n)\n\nActionsPanel.propTypes = {\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n}\n\nexport default ActionsPanel\n"],"sourceRoot":""}