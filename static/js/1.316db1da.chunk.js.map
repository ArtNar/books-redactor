{"version":3,"sources":["components/forms/Form/Form.module.css","components/FieldError/FieldError.module.css","components/Input/Input.module.css","components/FieldWrapper/FieldWrapper.module.css","components/forms/BaseFieldArray/BaseFieldArray.module.css","components/FileInput/FileInput.module.css","utils/hoc/withFieldArray.jsx","components/forms/Form/Form.jsx","components/FieldError/FieldError.jsx","components/Input/Input.jsx","components/FieldWrapper/FieldWrapper.jsx","components/forms/BaseField/BaseField.jsx","components/forms/TextField/TextField.jsx","components/forms/DateField/DateField.jsx","components/forms/NumberField/NumberField.jsx","components/forms/BaseFieldArray/BaseFieldArray.jsx","components/forms/AuthorInformation/AuthorInformation.jsx","utils/helpers/declOfNum.js","utils/validation/messages.js","utils/validation/string.js","utils/validation/date.js","utils/validation/number.js","utils/validation/publishYear.js","utils/validation/bookName.js","utils/validation/amountOfPages.js","utils/validation/publishingHouseName.js","utils/validation/releaseDate.js","utils/validation/isbn.js","utils/validation/authorName.js","utils/validation/image.js","components/forms/AuthorInformation/fields.js","components/forms/AuthorFieldArray/AuthorFieldArray.jsx","components/FileInput/FileInput.jsx","components/forms/FileField/FileField.jsx","containers/BookForm/BookFormView.jsx","containers/BookForm/fields.js","containers/BookForm/BookForm.jsx","utils/hoc/withFormik.jsx","utils/helpers/getValidationSchemaFromFields.js","containers/BookPage/BookPage.jsx","utils/helpers/getInitialValuesFromFields.js","components/Button/Button.jsx","components/ActionsPanel/ActionsPanel.jsx","components/Button/Button.module.css","components/ActionsPanel/ActionsPanel.module.css","utils/hooks/useQueryStorage.js","utils/hooks/useMutationStorage.js","utils/constants/storage.js"],"names":["module","exports","Component","cn","_cn","styles","Form","children","onSubmit","className","FieldError","error","Input","name","disabled","type","placeholder","required","label","onBlur","onChange","onClick","onKeyDown","onKeyUp","onFocus","value","rest","cx","event","args","FieldWrapper","collapsed","BaseField","component","values","touched","errors","get","TextField","props","DateField","NumberField","BaseFieldArray","minFields","push","remove","defaultValue","valuesArray","handleRemove","idx","useEffect","length","i","map","_","key","Button","color","renderFieldRow","AuthorInformation","formName","fieldProps","declOfNum","number","titles","messages","size","formats","join","stringNotRequired","Yup","typeError","stringRequired","date","integer","integerRequired","MAX","Date","getFullYear","publishYear","moreThan","MIN","lessThan","bookName","max","amountOfPages","publishingHouseName","releaseDate","min","validISBN10","isbn","sum","Number","validISBN13","test","str","isValidISBN","authorName","SUPPORTED_FORMATS","image","FILE_SIZE","format","split","includes","validationRule","surname","DEFAULT_VALUE","AuthorFieldArray","index","withLabels","FileInput","onDelete","inputRef","useRef","imgRef","current","src","File","fReader","FileReader","onload","result","readAsDataURL","ref","inputValues","target","files","filesArray","Array","from","hidden","click","height","alt","FileField","useFormikContext","setFieldValue","setFieldTouched","updateField","newValue","BookFormView","disabledProp","isSubmitting","handleChange","handleBlur","handleSubmit","inProgress","authors","authorInformationFields","BookForm","validationSchema","displayName","formik","mapPropsToValues","initialValues","enableReinitialize","formData","a","setSubmitting","setErrors","onError","onFinish","message","withFormik","getValidationSchemaFromFields","fields","isArray","of","Object","keys","forEach","field","Error","shape","prepareData","data","Promise","resolve","BookPage","history","useHistory","bookId","useParams","useQueryStorage","BOOKS_STORAGE_PATH","loading","useMutationStorage","saveData","redirectToHomePage","currentBookId","id","uniqId","then","newBookData","filter","useMemo","bookData","find","getInitialValuesFromFields","obj","_obj","ActionsPanel","actions","onCancel","alert","Preloader","itemKey","useState","undefined","setData","setLoading","getStorageData","useCallback","localStorage","getItem","fetchData","JSON","parse","catch","finally","refetch","setItem","stringify"],"mappings":"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","file":"static/js/1.316db1da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__FrcMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-error\":\"FieldError_field-error__1ei3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\",\"input_disabled\":\"Input_input_disabled__1KQCy\",\"input__inner\":\"Input_input__inner__1EWoq\",\"input__wrapper\":\"Input_input__wrapper__1ZSiw\",\"input__label\":\"Input_input__label__1_HsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-wrapper\":\"FieldWrapper_field-wrapper__2U7FE\",\"field-wrapper_collapsed\":\"FieldWrapper_field-wrapper_collapsed__nhfBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-array-row\":\"BaseFieldArray_field-array-row__10u4m\",\"field-array-row__label\":\"BaseFieldArray_field-array-row__label__2sgjv\",\"field-array-row__button\":\"BaseFieldArray_field-array-row__button__FdiV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-input\":\"FileInput_file-input__1TJxL\",\"file-input__label\":\"FileInput_file-input__label__31ll3\"};","import React            from 'react'\nimport { FieldArray }   from 'formik'\n\nexport const withFieldArray = (Component) => ({ name, ...rest }) => (\n    <FieldArray name={name}>\n        {({ push, remove }) => (\n            <Component\n                {...rest}\n                name={name}\n                push={push}\n                remove={remove}\n            />\n        )}\n    </FieldArray>\n)\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport _cn          from 'utils/cn'\nimport styles       from './Form.module.css'\n\nconst cn = _cn('form', styles)\n\nconst Form = ({\n    children,\n    onSubmit,\n}) => (\n    <form\n        className={cn()}\n        onSubmit={onSubmit}\n    >\n        {children}\n    </form>\n)\n\nForm.propTypes = {\n    children: PropTypes.node.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Form\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport _cn          from 'utils/cn'\nimport styles       from './FieldError.module.css'\n\nconst cn = _cn('field-error', styles)\n\nconst FieldError = ({\n    error = '',\n}) => (\n    error\n        ? (\n            <div className={cn()}>\n                {error}\n            </div>\n        )\n        : null\n)\n\nFieldError.propTypes = {\n    error: PropTypes.string,\n}\n\nexport default FieldError\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport { FieldError }   from 'components/FieldError'\nimport styles           from './Input.module.css'\n\nconst cn = _cn('input', styles)\n\nconst Input = ({\n    name,\n    className,\n    disabled,\n    type = 'text',\n    placeholder,\n    required,\n    error,\n    label,\n    onBlur,\n    onChange,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    value = '',\n    ...rest\n}) => {\n    const handleFocus = (event) => {\n        if (onFocus) {\n            onFocus(event)\n        }\n    }\n\n    const handleBlur = (event) => {\n        if (onBlur) {\n            onBlur(event)\n        }\n    }\n\n    const handleChange = (event, ...args) => {\n        if (onChange) {\n            onChange(event, ...args)\n        }\n    }\n\n    const handleClick = (event) => {\n        if (onClick) {\n            onClick(event)\n        }\n    }\n\n    return (\n        <div className={cx(cn('wrapper', className))}>\n            {label && (\n                <div className={cn('label')}>\n                    {label}\n                </div>\n            )}\n            <div className={cn({ disabled })}>\n                <input\n                    {...rest}\n                    className={cn('inner')}\n                    name={name}\n                    type={type}\n                    value={value}\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    required={required}\n                    onKeyDown={onKeyDown}\n                    onKeyUp={onKeyUp}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onClick={handleClick}\n                />\n            </div>\n            <FieldError error={error} />\n        </div>\n    )\n}\n\nInput.propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    placeholder: PropTypes.string,\n    readOnly: PropTypes.bool,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]),\n}\n\nexport default Input\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport cx           from 'classnames'\nimport _cn          from 'utils/cn'\nimport styles       from './FieldWrapper.module.css'\n\nconst cn = _cn('field-wrapper', styles)\n\nconst FieldWrapper = ({\n    className,\n    collapsed,\n    ...rest\n}) => (\n    <div\n        {...rest}\n        className={cx(cn({\n            collapsed,\n        }), className)}\n    />\n)\n\nFieldWrapper.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    collapsed: PropTypes.bool,\n}\n\nexport default FieldWrapper\n","import React            from 'react'\nimport PropTypes        from 'prop-types'\nimport get              from 'just-safe-get'\nimport { FieldWrapper } from 'components/FieldWrapper'\n\nconst BaseField = ({\n    component: Component,\n    name,\n    values = {},\n    touched = {},\n    errors = {},\n    collapsed,\n    ...rest\n}) => (\n    <FieldWrapper collapsed={collapsed}>\n        <Component\n            {...rest}\n            name={name}\n            value={get(values, name)}\n            error={get(touched, name) && get(errors, name)}\n        />\n    </FieldWrapper>\n)\n\nBaseField.propTypes = {\n    component: PropTypes.func,\n    collapsed: PropTypes.bool,\n    data: PropTypes.shape({}),\n    errors: PropTypes.shape({}),\n    name: PropTypes.string,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default BaseField\n","import React            from 'react'\n\nimport { Input }        from 'components/Input'\nimport { BaseField }    from 'components/forms/BaseField'\n\nconst TextField = (props) => (\n    <BaseField\n        {...props}\n        component={Input}\n    />\n)\n\nexport default TextField\n","import React            from 'react'\n\nimport { Input }        from 'components/Input'\nimport { BaseField }    from 'components/forms/BaseField'\n\nconst DateField = (props) => (\n    <BaseField\n        {...props}\n        component={Input}\n        type=\"date\"\n    />\n)\n\nexport default DateField\n","import React            from 'react'\n\nimport { Input }        from 'components/Input'\nimport { BaseField }    from 'components/forms/BaseField'\n\nconst NumberField = (props) => (\n    <BaseField\n        {...props}\n        component={Input}\n        type=\"number\"\n    />\n)\n\nexport default NumberField\n","/* eslint-disable no-plusplus */\nimport React, { useEffect } from 'react'\nimport PropTypes            from 'prop-types'\nimport get                  from 'just-safe-get'\nimport _cn                  from 'utils/cn'\nimport { withFieldArray }   from 'utils/hoc/withFieldArray'\nimport { FieldWrapper }     from 'components/FieldWrapper'\nimport { Button }           from 'components/Button'\nimport styles               from './BaseFieldArray.module.css'\n\nconst cn = _cn('field-array-row', styles)\n\nconst BaseFieldArray = withFieldArray(({\n    label,\n    minFields,\n    push,\n    remove,\n    children,\n    disabled,\n    values = {},\n    name,\n    defaultValue = {},\n}) => {\n    const valuesArray = get(values, name) || []\n\n    const handleAdd = () => push(defaultValue)\n\n    const handleRemove = (idx) => () => remove(idx)\n\n    const renderFieldRow = (idx) => (\n        <div\n            key={idx}\n            className={cn()}\n        >\n            {children(idx)}\n            <div className={cn('button')}>\n                <Button\n                    color=\"secondary\"\n                    onClick={handleRemove(idx)}\n                    disabled={disabled || valuesArray.length === minFields}\n                >\n                    Удалить\n                </Button>\n            </div>\n        </div>\n    )\n\n    useEffect(() => {\n        if (minFields && minFields > 0 && !valuesArray.length) {\n            for (let i = 0; i < minFields; i++) {\n                push({})\n            }\n        }\n    }, [minFields, push, valuesArray.length])\n\n    return (\n        <FieldWrapper>\n            {label && (\n                <div className={cn('label')}>\n                    {label}\n                </div>\n            )}\n            {valuesArray.map((_, idx) => (\n                renderFieldRow(idx)\n            ))}\n            <Button\n                disabled={disabled}\n                onClick={handleAdd}\n            >\n                Добавить\n            </Button>\n        </FieldWrapper>\n    )\n})\n\nBaseFieldArray.propTypes = {\n    children: PropTypes.func,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    minFields: PropTypes.number,\n    push: PropTypes.func,\n    remove: PropTypes.func,\n    valuesArray: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n}\n\nexport default BaseFieldArray\n","import React                from 'react'\nimport PropTypes            from 'prop-types'\nimport { TextField }        from 'components/forms/TextField'\n\nconst AuthorInformation = ({\n    formName,\n    disabled,\n    onBlur,\n    onChange,\n    errors = {},\n    values = {},\n    touched = {},\n}) => {\n    const fieldProps = {\n        values,\n        touched,\n        errors,\n        disabled,\n        onBlur,\n        onChange,\n        placeholder: 'Введите данные',\n    }\n\n    return (\n        <>\n            <TextField\n                {...fieldProps}\n                name={`${formName}.name`}\n                label=\"Имя\"\n            />\n            <TextField\n                {...fieldProps}\n                name={`${formName}.surname`}\n                label=\"Фамилия\"\n            />\n        </>\n    )\n}\n\nAuthorInformation.propTypes = {\n    disabled: PropTypes.bool,\n    errors: PropTypes.shape({}),\n    formName: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default AuthorInformation\n","export const declOfNum = (number, titles) => {\n    const cases = [2, 0, 1, 1, 1, 2]\n\n    return titles[(number % 100 > 4 && number % 100 < 20)\n        ? 2\n        : cases[(number % 10 < 5) ? number % 10 : 5]]\n}\n","import { declOfNum } from 'utils/helpers/declOfNum'\n\nexport const messages = {\n    required: 'Заполните поле',\n    isNumber: 'Значение должно быть числом',\n    isDate: 'Значение должно быть датой',\n    isInteger: 'Значение должно быть целым числом',\n    isISBN: 'Значение должно валидным ISBN',\n    isString: 'Значение должно быть строкой',\n    tooShort: (value = 0) => `Значение должно быть минимум ${value} ${declOfNum(value, ['символ', 'символа', 'символов'])}`,\n    tooLong: (value = 0) => `Значение должно быть максимум ${value} ${declOfNum(value, ['символ', 'символа', 'символов'])}`,\n    min: (value = 0) => `Минимальное значение - ${value}`,\n    max: (value = 0) => `Максимальное значение - ${value}`,\n    fileTooLarge: (size = 0) => `Максимальный размер файла - ${size}мб`,\n    unsupportedFormat: (formats = []) => `Разрешенные форматы - ${formats.join(', ')}`,\n}\n","import * as Yup from 'yup'\nimport { messages } from './messages'\n\nexport const stringNotRequired = Yup\n    .string()\n    .typeError(messages.isString)\n\nexport const stringRequired = stringNotRequired\n    .required(messages.required)\n","import * as Yup from 'yup'\nimport { messages } from './messages'\n\nexport const date = Yup\n    .date()\n    .typeError(messages.isDate)\n\nexport const dateRequired = date\n    .required(messages.required)\n","import * as Yup from 'yup'\nimport { messages } from './messages'\n\nexport const number = Yup\n    .number()\n    .typeError(messages.isNumber)\n\nexport const integer = number\n    .integer(messages.isInteger)\n\nexport const integerRequired = number\n    .integer(messages.isInteger)\n    .required(messages.required)\n","import { messages } from './messages'\nimport { integer } from './number'\n\nconst MIN = 1800\nconst MAX = new Date().getFullYear()\n\nexport const publishYear = integer\n    .moreThan(MIN - 1, messages.min(MIN))\n    .lessThan(MAX + 1, messages.max(MAX))\n","import { messages } from './messages'\nimport { stringRequired } from './string'\n\nconst MAX = 30\n\nexport const bookName = stringRequired\n    .max(MAX, messages.tooLong(MAX))\n","import { messages } from './messages'\nimport { integerRequired } from './number'\n\nconst MIN = 1\nconst MAX = 10000\n\nexport const amountOfPages = integerRequired\n    .moreThan(MIN - 1, messages.min(1))\n    .lessThan(MAX + 1, messages.max(MAX))\n","import { messages } from './messages'\nimport { stringNotRequired } from './string'\n\nconst MAX = 30\n\nexport const publishingHouseName = stringNotRequired\n    .max(MAX, messages.tooLong(MAX))\n","import { messages } from './messages'\nimport { date } from './date'\n\nconst MIN = '01.01.1800'\n\nexport const releaseDate = date\n    .min(MIN, messages.min(MIN))\n","/* eslint-disable no-plusplus */\nimport { messages } from './messages'\nimport { stringNotRequired } from './string'\n\nconst validISBN10 = (isbn) => {\n    if (isbn.length !== 10) {\n        return false\n    }\n\n    let sum = 0\n    for (let i = 0; i < isbn.length; i++) {\n        if (isbn[i] === 'X' && i < 9) {\n            return false\n        }\n        if (isbn[i] !== 'X') {\n            sum += Number(isbn[i]) * (i + 1)\n        } else {\n            sum += 1\n        }\n    }\n    return sum % 11 === 0\n}\n\nconst validISBN13 = (isbn) => {\n    if (isbn.length !== 13) {\n        return false\n    }\n\n    let sum = 0\n    for (let i = 0; i < isbn.length; i++) {\n        sum += Number(isbn[i]) * (i % 2 !== 0 ? 3 : 1)\n    }\n    return sum % 10 === 0\n}\n\nconst isValidISBN = (str = '') => {\n    if (str.length !== 10 && str.length !== 13) {\n        return false\n    }\n\n    switch (str.length) {\n    case 10:\n        return validISBN10(str)\n    case 13:\n        return validISBN13(str)\n    default:\n        return false\n    }\n}\n\nconst MIN = 10\nconst MAX = 13\n\nexport const isbn = stringNotRequired\n    .min(MIN, messages.tooShort(MIN))\n    .max(MAX, messages.tooLong(MAX))\n    .test('test-isbn', messages.isISBN, (value) => !value || isValidISBN(value))\n","import { messages } from './messages'\nimport { stringRequired } from './string'\n\nconst MAX = 20\n\nexport const authorName = stringRequired\n    .max(MAX, messages.tooLong(MAX))\n","/* eslint-disable no-unused-vars */\nimport * as Yup from 'yup'\nimport { messages } from './messages'\n\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png']\nconst FILE_SIZE = 1000000\n\nconst getSupportedExtensions = (formats) => formats.map((format) => {\n    const [_, extension] = format.split('/')\n\n    return extension\n})\n\nexport const image = Yup\n    .mixed()\n    .test(\n        'fileSize',\n        messages.fileTooLarge(FILE_SIZE / 1000000), // в мб\n        (value) => !value\n        || typeof value === 'string' // уже загружена\n        || value.size <= FILE_SIZE,\n    )\n    .test(\n        'fileType',\n        messages.unsupportedFormat(getSupportedExtensions(SUPPORTED_FORMATS)),\n        (value) => !value\n        || typeof value === 'string'\n        || SUPPORTED_FORMATS.includes(value.type),\n    )\n","import {\n    authorName,\n} from 'utils/validation'\n\nexport default {\n    name: {\n        name: 'name',\n        defaultValue: '',\n        validationRule: authorName,\n    },\n    surname: {\n        name: 'surname',\n        defaultValue: '',\n        validationRule: authorName,\n    },\n}\n","import React                    from 'react'\nimport PropTypes                from 'prop-types'\nimport { BaseFieldArray }       from 'components/forms/BaseFieldArray'\nimport { AuthorInformation }    from 'components/forms/AuthorInformation'\n\nconst DEFAULT_VALUE = {\n    name: '',\n    surname: '',\n}\n\nconst AuthorFieldArray = ({\n    name,\n    label = 'Авторы',\n    disabled,\n    errors,\n    values,\n    touched,\n    onChange,\n    onBlur,\n}) => (\n    <div>\n        <BaseFieldArray\n            name={name}\n            label={label}\n            minFields={1}\n            disabled={disabled}\n            values={values}\n            defaultValue={DEFAULT_VALUE}\n        >\n            {(index) => (\n                <AuthorInformation\n                    formName={`${name}.${index}`}\n                    withLabels={false}\n                    disabled={disabled}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    values={values}\n                    errors={errors}\n                    touched={touched}\n                />\n            )}\n        </BaseFieldArray>\n    </div>\n)\n\nAuthorFieldArray.propTypes = {\n    disabled: PropTypes.bool,\n    errors: PropTypes.shape({}),\n    name: PropTypes.string,\n    label: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default AuthorFieldArray\n","import React, { useRef, useEffect } from 'react'\nimport PropTypes                    from 'prop-types'\nimport _cn                          from 'utils/cn'\nimport { Button }                   from 'components/Button'\nimport { FieldError }               from 'components/FieldError'\nimport styles                       from './FileInput.module.css'\n\nconst cn = _cn('file-input', styles)\n\nconst FileInput = ({\n    name,\n    disabled,\n    onChange,\n    onDelete,\n    label,\n    value,\n    error,\n}) => {\n    const inputRef = useRef(null)\n    const imgRef = useRef(null)\n\n    const handleChange = ({ target: { files: inputValues } }) => {\n        const filesArray = Array.from(inputValues)\n\n        if (onChange) {\n            onChange(filesArray[0])\n        }\n    }\n\n    const handleDelete = () => {\n        if (inputRef\n            && inputRef.current) {\n            inputRef.current.value = ''\n        }\n        if (imgRef\n            && imgRef.current) {\n            imgRef.current.src = ''\n        }\n\n        if (onDelete) {\n            onDelete(null)\n        }\n    }\n\n    const handleOpenDialog = () => {\n        if (!disabled\n            && inputRef\n            && inputRef.current) {\n            inputRef.current.click()\n        }\n    }\n\n    useEffect(() => {\n        if (error) {\n            imgRef.current.src = ''\n            return\n        }\n\n        if (value instanceof File) {\n            const fReader = new FileReader()\n            fReader.onload = () => {\n                imgRef.current.src = fReader.result\n            }\n            fReader.readAsDataURL(value)\n        } else if (typeof value === 'string') {\n            imgRef.current.src = value\n        }\n    }, [value, error])\n\n    return (\n        <div className={cn()}>\n            <input\n                name={name}\n                ref={inputRef}\n                disabled={disabled}\n                onChange={handleChange}\n                type=\"file\"\n                hidden\n            />\n            <div>\n                {label && (\n                    <div className={cn('label')}>{label}</div>\n                )}\n                {!value && (\n                    <Button\n                        onClick={handleOpenDialog}\n                        disabled={disabled}\n                    >\n                        Загрузить\n                    </Button>\n                )}\n            </div>\n            <img ref={imgRef} src=\"\" height=\"200\" alt=\"\" />\n            <div>\n                <FieldError error={error} />\n            </div>\n            {value && (\n                <Button\n                    onClick={handleDelete}\n                    disabled={disabled}\n                >\n                    Удалить\n                </Button>\n            )}\n        </div>\n    )\n}\n\nFileInput.propTypes = {\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]),\n}\n\nexport default FileInput\n","import React                from 'react'\nimport PropTypes            from 'prop-types'\nimport { useFormikContext } from 'formik'\nimport { BaseField }        from 'components/forms/BaseField'\nimport { FileInput }        from 'components/FileInput'\n\nconst FileField = ({\n    name,\n    ...rest\n}) => {\n    const { setFieldValue, setFieldTouched } = useFormikContext()\n\n    const updateField = (newValue) => {\n        setFieldTouched(name, true)\n        setFieldValue(name, newValue)\n    }\n\n    const handleChange = (newValue) => {\n        updateField(newValue)\n    }\n\n    const handleDelete = (newValue) => {\n        updateField(newValue)\n    }\n\n    return (\n        <BaseField\n            {...rest}\n            component={FileInput}\n            name={name}\n            onChange={handleChange}\n            onDelete={handleDelete}\n        />\n    )\n}\n\nFileField.propTypes = {\n    name: PropTypes.string,\n    onDelete: PropTypes.func,\n}\n\nexport default FileField\n","import React                from 'react'\nimport PropTypes            from 'prop-types'\nimport { Button }           from 'components/Button'\nimport { Form }             from 'components/forms/Form'\nimport { TextField }        from 'components/forms/TextField'\nimport { DateField }        from 'components/forms/DateField'\nimport { NumberField }      from 'components/forms/NumberField'\nimport { AuthorFieldArray } from 'components/forms/AuthorFieldArray'\nimport { FileField }        from 'components/forms/FileField'\n\nconst BookFormView = ({\n    values,\n    errors,\n    touched,\n    disabled: disabledProp,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n}) => {\n    const fieldProps = {\n        values,\n        touched,\n        errors,\n        disabled: disabledProp || isSubmitting,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        placeholder: 'Введите данные',\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FileField\n                {...fieldProps}\n                name=\"image\"\n                label=\"Изображение\"\n            />\n            <TextField\n                {...fieldProps}\n                label=\"Название\"\n                name=\"bookName\"\n            />\n            <AuthorFieldArray\n                {...fieldProps}\n                name=\"authors\"\n            />\n            <NumberField\n                {...fieldProps}\n                label=\"Количество страниц\"\n                name=\"amountOfPages\"\n            />\n            <TextField\n                {...fieldProps}\n                label=\"Название издательства\"\n                name=\"publishingHouseName\"\n            />\n            <NumberField\n                {...fieldProps}\n                label=\"Год публикации\"\n                name=\"publishYear\"\n            />\n            <DateField\n                {...fieldProps}\n                label=\"Дата выхода в тираж\"\n                name=\"releaseDate\"\n            />\n            <TextField\n                {...fieldProps}\n                label=\"ISBN\"\n                name=\"isbn\"\n            />\n            <Button\n                type=\"submit\"\n                disabled={disabledProp}\n                inProgress={isSubmitting}\n            >\n                Сохранить\n            </Button>\n        </Form>\n    )\n}\n\nBookFormView.propTypes = {\n    data: PropTypes.shape({}),\n    errors: PropTypes.shape({}),\n    handleBlur: PropTypes.func,\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n    disabled: PropTypes.bool,\n    touched: PropTypes.shape({}),\n    values: PropTypes.shape({}),\n}\n\nexport default BookFormView\n","import {\n    bookName,\n    amountOfPages,\n    publishingHouseName,\n    publishYear,\n    releaseDate,\n    isbn,\n    image,\n} from 'utils/validation'\nimport { authorInformationFields } from 'components/forms/AuthorInformation'\n\nexport default {\n    bookName: {\n        name: 'bookName',\n        defaultValue: '',\n        validationRule: bookName,\n    },\n    amountOfPages: {\n        name: 'amountOfPages',\n        defaultValue: '',\n        validationRule: amountOfPages,\n    },\n    publishingHouseName: {\n        name: 'publishingHouseName',\n        defaultValue: '',\n        validationRule: publishingHouseName,\n    },\n    publishYear: {\n        name: 'publishYear',\n        defaultValue: '',\n        validationRule: publishYear,\n    },\n    releaseDate: {\n        name: 'releaseDate',\n        defaultValue: '',\n        validationRule: releaseDate,\n    },\n    isbn: {\n        name: 'isbn',\n        defaultValue: '',\n        validationRule: isbn,\n    },\n    image: {\n        name: 'image',\n        defaultValue: null,\n        validationRule: image,\n    },\n    authors: [authorInformationFields],\n}\n","import { withFormik }                       from 'utils/hoc/withFormik'\nimport { getValidationSchemaFromFields }    from 'utils/helpers/getValidationSchemaFromFields'\nimport BookFormView                         from './BookFormView'\nimport fields                                from './fields'\n\nconst BookForm = withFormik({\n    validationSchema: getValidationSchemaFromFields(fields),\n    displayName: 'BookForm',\n})(BookFormView)\n\nexport default BookForm\n","import { withFormik as formik } from 'formik'\n\nexport const withFormik = ({\n    validationSchema,\n    displayName,\n    ...rest\n}) => (Component) => formik({\n    mapPropsToValues: ({ initialValues }) => initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    handleSubmit: async (formData, { setSubmitting, setErrors, props }) => {\n        const { onSubmit, onError, onFinish } = props\n\n        try {\n            const errors = await onSubmit(formData)\n\n            setSubmitting(false)\n\n            if (errors && setErrors) {\n                setErrors(errors)\n            } else if (onFinish) {\n                onFinish()\n            }\n        } catch (error) {\n            setSubmitting(false)\n\n            if (onError) {\n                onError(`Ошибка сохранения: ${error.message}`)\n            }\n        }\n    },\n    displayName,\n    ...rest,\n})(Component)\n","import * as Yup from 'yup'\n\nexport const getValidationSchemaFromFields = (fields) => {\n    const result = {}\n\n    if (Array.isArray(fields)) {\n        return Yup.array().of(getValidationSchemaFromFields(fields[0]))\n    }\n\n    Object.keys(fields).forEach((key) => {\n        const field = fields[key]\n\n        if (typeof field !== 'object') {\n            throw new Error(`Wrong type of field \"${key}\" passed to validation schema. Expected \"object\" type`)\n        }\n\n        if ('validationRule' in field) {\n            result[key] = field.validationRule\n        } else {\n            result[key] = getValidationSchemaFromFields(field)\n        }\n    })\n\n    return Yup.object().shape({ ...result })\n}\n","import React, { useMemo }               from 'react'\nimport { useHistory, useParams }        from 'react-router-dom'\nimport uniqId                           from 'uniqid'\nimport { getInitialValuesFromFields }   from 'utils/helpers/getInitialValuesFromFields'\nimport { BookForm, fields }              from 'containers/BookForm'\nimport { ActionsPanel }                 from 'components/ActionsPanel'\nimport { useQueryStorage }              from 'utils/hooks/useQueryStorage'\nimport { useMutationStorage }           from 'utils/hooks/useMutationStorage'\nimport { BOOKS_STORAGE_PATH }           from 'utils/constants/storage'\n\nconst getActions = ({ onCancel }) => [\n    {\n        key: ' cancel',\n        label: 'Назад',\n        onClick: onCancel,\n    },\n]\n\nconst prepareData = (data) => new Promise((resolve) => {\n    if (!data.image || typeof data.image === 'string') {\n        resolve(data)\n    }\n\n    const fReader = new FileReader()\n    fReader.onload = () => {\n        resolve({\n            ...data,\n            image: fReader.result,\n        })\n    }\n    fReader.readAsDataURL(data.image)\n})\n\nconst BookPage = () => {\n    const history = useHistory()\n    const { bookId } = useParams()\n    const { data = [], loading } = useQueryStorage(BOOKS_STORAGE_PATH)\n    const [saveData] = useMutationStorage(BOOKS_STORAGE_PATH)\n\n    const redirectToHomePage = () => history.push('/')\n\n    const handleSubmit = async (values) => {\n        const currentBookId = values.id || uniqId()\n\n        return prepareData(values)\n            .then((newBookData) => ([\n                ...data.filter(({ id }) => id !== currentBookId),\n                {\n                    id: currentBookId,\n                    ...newBookData,\n                },\n            ]))\n            .then(saveData)\n    }\n\n    const handleError = (error) => {\n        // TODO: Добавить вывод в Snackbar\n        alert(error)\n    }\n\n    const initialValues = useMemo(() => {\n        const bookData = bookId\n            ? data.find(({ id }) => id === bookId)\n            : {}\n\n        return ({\n            ...getInitialValuesFromFields(fields),\n            ...bookData,\n        })\n    }, [bookId, data])\n\n    return (\n        <>\n            <ActionsPanel\n                actions={getActions({\n                    onCancel: redirectToHomePage,\n                })}\n            />\n            <BookForm\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                onError={handleError}\n                onFinish={redirectToHomePage}\n                disabled={loading}\n            />\n        </>\n    )\n}\n\nexport default BookPage\n","/* eslint-disable no-underscore-dangle */\nexport const getInitialValuesFromFields = (obj) => {\n    const result = {}\n\n    if (Array.isArray(obj)) {\n        return [getInitialValuesFromFields(obj[0])]\n    }\n\n    Object.keys(obj).forEach((key) => {\n        if (typeof obj[key] === 'object') {\n            if ('defaultValue' in obj[key]) {\n                result[key] = obj[key].defaultValue\n            } else {\n                const _obj = getInitialValuesFromFields(obj[key])\n\n                result[key] = _obj\n            }\n        } else {\n            result[key] = ''\n        }\n    })\n\n    return result\n}\n","/* eslint-disable react/button-has-type */\nimport React            from 'react'\nimport PropTypes        from 'prop-types'\nimport { Preloader }    from 'components/Preloader'\nimport cx               from 'classnames'\nimport _cn              from 'utils/cn'\nimport styles           from './Button.module.css'\n\nconst cn = _cn('button', styles)\n\nconst Button = ({\n    name,\n    className,\n    disabled,\n    children,\n    type = 'button',\n    inProgress,\n    onClick,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        type={type}\n        className={cx(cn({\n            disabled,\n        }), className)}\n        name={name}\n        disabled={disabled}\n        onClick={onClick}\n    >\n        <div\n            key=\"content\"\n            className={cn('content')}\n        >\n            {inProgress\n                ? <Preloader className={cn('spin')} />\n                : (\n                    <span\n                        key=\"text\"\n                        className={cn('item')}\n                    >\n                        {children}\n                    </span>\n                )}\n        </div>\n    </button>\n)\n\nButton.propTypes = {\n    disabled: PropTypes.bool,\n    inProgress: PropTypes.bool,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React        from 'react'\nimport PropTypes    from 'prop-types'\nimport { Button }   from 'components/Button'\nimport _cn          from 'utils/cn'\nimport styles       from './ActionsPanel.module.css'\n\nconst cn = _cn('actions-panel', styles)\n\nconst ActionsPanel = ({\n    actions = [],\n}) => (\n    <div className={cn()}>\n        {actions.map(({\n            key,\n            label,\n            onClick,\n            ...rest\n        }) => (\n            <Button\n                {...rest}\n                className={cn('button')}\n                key={key}\n                onClick={onClick}\n            >\n                {label}\n            </Button>\n        ))}\n    </div>\n)\n\nActionsPanel.propTypes = {\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({}),\n    ),\n}\n\nexport default ActionsPanel\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\",\"button__content\":\"Button_button__content__2_NlO\",\"button_disabled\":\"Button_button_disabled__Fzsch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions-panel\":\"ActionsPanel_actions-panel__1JMSO\",\"actions-panel__button\":\"ActionsPanel_actions-panel__button__2mAKk\"};","import { useState, useEffect, useCallback } from 'react'\n\nexport const useQueryStorage = (itemKey) => {\n    const [data, setData] = useState(undefined)\n    const [errors, setErrors] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const getStorageData = useCallback(async () => localStorage.getItem(itemKey), [itemKey])\n\n    const fetchData = useCallback(() => {\n        getStorageData()\n            .then((result) => {\n                if (result) {\n                    setData(JSON.parse(result))\n                }\n            })\n            .catch((error) => setErrors(error))\n            .finally(() => setLoading(false))\n    }, [getStorageData])\n\n    useEffect(() => {\n        if (!itemKey) {\n            throw new Error('You should provide path to data at localStorage')\n        }\n\n        fetchData()\n    }, [itemKey, fetchData])\n\n    return {\n        data,\n        loading,\n        errors,\n        refetch: fetchData,\n    }\n}\n","export const useMutationStorage = (itemKey) => {\n    const setStorageData = async (value) => {\n        try {\n            localStorage.setItem(itemKey, JSON.stringify(value))\n        } catch (error) {\n            throw new Error('Недостаточно места в Local Storage')\n        }\n    }\n\n    return [setStorageData]\n}\n","export const BOOKS_STORAGE_PATH = 'books'\n"],"sourceRoot":""}